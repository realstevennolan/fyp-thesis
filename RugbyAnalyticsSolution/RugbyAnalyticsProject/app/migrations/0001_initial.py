# Generated by Django 3.2.18 on 2025-03-21 15:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('home_score', models.IntegerField()),
                ('away_score', models.IntegerField()),
                ('tv_coverage', models.CharField(blank=True, max_length=100)),
                ('referee', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True)),
                ('club', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=50)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('height', models.CharField(blank=True, max_length=20)),
                ('weight', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('country', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TeamStanding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('draws', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('points_difference', models.IntegerField(default=0)),
                ('bonus_points', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMatchStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_scored', models.IntegerField(default=0)),
                ('tries_scored', models.IntegerField(default=0)),
                ('tackles_made', models.IntegerField(default=0)),
                ('total_tackles_missed', models.IntegerField(default=0)),
                ('turnovers_won', models.IntegerField(default=0)),
                ('turnovers_lost', models.IntegerField(default=0)),
                ('lineouts_won', models.IntegerField(default=0)),
                ('lineouts_lost', models.IntegerField(default=0)),
                ('scrums_won', models.IntegerField(default=0)),
                ('scrums_lost', models.IntegerField(default=0)),
                ('penalties_conceded', models.IntegerField(default=0)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.match')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.team')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMatchStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_scored', models.IntegerField(default=0)),
                ('tries_scored', models.IntegerField(default=0)),
                ('offloads', models.IntegerField(default=0)),
                ('meters_gained', models.IntegerField(default=0)),
                ('defenders_beaten', models.IntegerField(default=0)),
                ('clean_breaks', models.IntegerField(default=0)),
                ('tackles_made', models.IntegerField(default=0)),
                ('tackle_success_percentage', models.FloatField(default=0)),
                ('total_tackles_missed', models.IntegerField(default=0)),
                ('turnovers_lost', models.IntegerField(default=0)),
                ('turnovers_won', models.IntegerField(default=0)),
                ('penalties_scored', models.IntegerField(default=0)),
                ('penalties_missed', models.IntegerField(default=0)),
                ('conversions_scored', models.IntegerField(default=0)),
                ('conversions_missed', models.IntegerField(default=0)),
                ('drop_goals_scored', models.IntegerField(default=0)),
                ('drop_goals_missed', models.IntegerField(default=0)),
                ('kicks_from_hand', models.IntegerField(default=0)),
                ('kicks_retained', models.IntegerField(default=0)),
                ('tries_from_kicks', models.IntegerField(default=0)),
                ('kick_meters', models.IntegerField(default=0)),
                ('yellow_cards', models.IntegerField(default=0)),
                ('red_cards', models.IntegerField(default=0)),
                ('penalties_conceded', models.IntegerField(default=0)),
                ('scrum_offences', models.IntegerField(default=0)),
                ('lineout_offences', models.IntegerField(default=0)),
                ('lineouts_won', models.IntegerField(default=0)),
                ('lineouts_lost', models.IntegerField(default=0)),
                ('lineout_success_percentage', models.FloatField(default=0)),
                ('lineout_steals', models.IntegerField(default=0)),
                ('scrums_won', models.IntegerField(default=0)),
                ('scrums_lost', models.IntegerField(default=0)),
                ('scrums_won_percentage', models.FloatField(default=0)),
                ('scrum_penalties_won', models.IntegerField(default=0)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.player')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='app.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='app.team'),
        ),
    ]
